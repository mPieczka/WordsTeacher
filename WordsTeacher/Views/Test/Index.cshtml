@model WordsTeacher.Models.Tests.TestListModel

@{
    ViewData["Title"] = "Index";
}

<h1>Tests</h1>
<script src="~/lib/jquery-datatable/jquery.dataTables.min.js"></script>
<script src="~/lib/handlebars/handlebars.js"></script>
<link href="~/lib/jquery-datatable/jquery.dataTables.min.css" rel="stylesheet" />

<p>
    <a asp-action="Create">Create New</a>
</p>

<table id="test-table" class="display" style="width:100%">
    <thead>
        <tr>
            <th>@Html.LabelFor(a => a.BaseLanguageName)</th>
            <th>@Html.LabelFor(a => a.TranslationLanguageName)</th>
            <th>@Html.LabelFor(a => a.CorrectAnswers)</th>
            <th>Actions</th>
        </tr>
    </thead>
</table>
<script id="actions-template" type="text/x-handlebars-template">
    {{#if model.canTryAgain}}
    <a class="btn btn-dark" href="@Url.Action("Test","Test")/{{model.id}}">
        {{#if (isPositive model.correctAnswers)}}
        Try again
        {{else}}
        Start
        {{/if}}
    </a>
    {{/if}}
    <a class="btn btn-success" href="@Url.Action("Edit","Test")/{{model.id}}">Edit</a>
    <button class="btn btn-danger" name="btn-delete" data-id="{{model.id}}">Delete</button>
</script>
<script>
    $(() => {
        Handlebars.registerHelper('isPositive', function (value) {
            return value[0] != '0';
        });

        var testTable = $('#test-table').DataTable({
            "serverSide": true,
            "searching": false,
            "drawCallback": function (settings) {
                $("[name='btn-delete']").click((e) => {
                    $.ajax({
                        url: "@Url.Action("Delete","Test")",
                        data: { id: $(e.target).data("id") },
                        method: "POST",
                        success: (response) => {
                            if (response && response.message)
                                if (response.success) {
                                    toastr.success(response.message)
                                    testTable.ajax.reload();
                                }
                                else
                                    toastr.error(response.message)
                        }
                    })
                });
            },
            "ajax": {
                url: "@Url.Action("GetTests", "Test")",
                type:"POST"
            },
            "columns": [
                { "data": "baseLanguageName" },
                { "data": "translationLanguageName" },
                { "data": "correctAnswers" },
                {
                    "data": "id",
                    "render": function (data, type, row, meta) {
                        var template = Handlebars.compile($("#actions-template").html());
                        return template({ model: row });
                }}
            ]
        });
    })
</script>